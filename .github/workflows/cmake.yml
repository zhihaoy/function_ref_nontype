name: CMake

on:
  push:
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ windows-2022, ubuntu-20.04, macos-15 ]

    steps:
    - uses: actions/checkout@v2
    - uses: seanmiddleditch/gha-setup-ninja@master

    - name: Set up GCC
      if: startsWith(matrix.os, 'ubuntu')
      uses: egor-tensin/setup-gcc@v1
      with:
        version: 11

    - name: Set up Developer Command Prompt
      if: startsWith(matrix.os, 'windows')
      uses: ilammy/msvc-dev-cmd@v1

    - name: Enable AddressSanitizer
      run: |
        echo "CXXFLAGS=-fsanitize=address" >> $GITHUB_ENV
        echo "LDFLAGS=-fsanitize=address" >> $GITHUB_ENV

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -G "Ninja Multi-Config"

    - name: Build
      run: |
        cmake --build ${{github.workspace}}/build --config Debug
        cmake --build ${{github.workspace}}/build --config RelWithDebInfo

    - name: Test
      working-directory: ${{github.workspace}}/build
      env:
        ASAN_OPTIONS: windows_hook_rtl_allocators=true
      run: |
        ctest --output-on-failure -C Debug
        ctest --output-on-failure -C RelWithDebInfo

    - name: Install
      run: >
        cmake --install ${{github.workspace}}/build
        --prefix ${{github.workspace}}/out

    - name: Compile Examples
      working-directory: ${{github.workspace}}/examples
      env:
        CMAKE_PREFIX_PATH: ${{github.workspace}}/out
      run: |
        cmake -B build -G Ninja
        cmake --build build
